#!/bin/bash
#
# Copyright 2019-present Celestica. All Rights Reserved.
#
# This program file is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
#

PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin

option="$1"
command="$@"

usage() {
    echo "Usage: bmc-exec [option] <command>"
    echo "options:"
    echo "  -h, --help          : to print this message."
    echo "  -f, --force         : do not prompt before overwriting."
    echo
}

run_cmd() {
    echo "Run command: "$command
    echo
    ret=$(curl -m 5 --silent --header "Content-Type:application/json" -d "{\"Command\": \"${command}\"}" http://240.1.1.1:8080/api/hw/rawcmd)
    if [ -z "$ret" ]; then
        echo "Failed to connect on BMC"
    else
        echo $ret | python -c "import sys, json; k = json.load(sys.stdin)['result']; print k if type(k) is not list else '\n'.join(k);"
    fi
    return 0
}

function confirm() {
    while true; do
        read -r -n 1 -p "$* [y/n]: " yn
        case $yn in
            [yY]) echo ; return 0 ;;
            [nN]) echo ; return 1 ;;
            *) echo
        esac
    done
}

if [ $# -lt 1 ]; then
    usage
    exit -1
fi


case $option in
    -h|--help)
        usage
        ;;
    -f|--force)
        command="${@:2}"
        run_cmd
        ;;
    *)
        if [[ $command == *"power"* ]]; then
            confirm "Do you need to run power command ?" || exit 1
        fi
        run_cmd
        ;;
esac

exit $?
